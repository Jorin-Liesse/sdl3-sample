name: Build Sample For Web
on: [workflow_dispatch]

jobs:
  build-web:
    name: Build demo for Web
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set project env vars
        run: |
          PROJECT_NAME=$(python3 -c "import json; print(json.load(open('assets/info.json'))['project'])")
          PROJECT_VERSION=$(python3 -c "import json; print(json.load(open('assets/info.json'))['version'])")
          PROJECT_RESOURCES=$(python3 -c "import json; print(json.load(open('assets/info.json'))['resources'])")
          echo "PROJECT_NAME=$PROJECT_NAME" >> $GITHUB_ENV
          echo "PROJECT_VERSION=$PROJECT_VERSION" >> $GITHUB_ENV
          echo "PROJECT_RESOURCES=$PROJECT_RESOURCES" >> $GITHUB_ENV
            
      - name: Get Emscripten
        run: |
          git clone https://github.com/emscripten-core/emsdk.git --depth=1
          cd emsdk
          ./emsdk install tot
          ./emsdk activate tot
      - name: Build for web
        run: |
          source emsdk/emsdk_env.sh
          emcmake cmake -S . -B build
          cmake --build build --parallel
      - name: Prepare for upload
        run: |
           mkdir _site
           mv build/${{ env.PROJECT_NAME }}.js _site/
           mv build/${{ env.PROJECT_NAME }}.data _site/
           mv build/${{ env.PROJECT_NAME }}.wasm _site/
           mv ${{ env.PROJECT_RESOURCES }}/index.html _site/
           mv ${{ env.PROJECT_RESOURCES }}/style.css _site/
           mv ${{ env.PROJECT_RESOURCES }}/script.js _site/
      - name: Fix permissions
        run: |
         chmod -c -R +rX "_site/" | while read line; do
           echo "::warning title=Invalid file permissions automatically fixed::$line"
         done
      - name: Upload 
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site/
        
 # Deploy job
  deploy:
    # Add a dependency to the build job
    needs: build-web

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # or the latest "vX.X.X" version tag for this action
